name: CI/CD

on:
  push:
    branches:
      - master

  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
                ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile

      - name: Check pristine lock file
        run: |
          sh ./scripts/check-git-pristine-yarn-lock.sh

      - name: Check packages duplicates
        run: yarn deduplicate --list --fail

      - name: Linting
        run: |
          yarn lint

      - name: Typecheck
        run: |
          yarn typecheck

      - name: Unit tests
        run: |
          yarn test:coverage
        env:
          CI: true

      - name: Build
        run: |
          yarn build
        env:
          STATIC_COMPRESS: true

      - name: Send coverage with action
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: false


