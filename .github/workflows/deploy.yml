name: Deploy

on:
    push:
        branches:
            - master

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [14.x]
        steps:
            - uses: actions/checkout@v2

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@master
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Get yarn cache directory path
              id: yarn-cache-dir-path
              run: echo "::set-output name=dir::$(yarn cache dir)"

            - uses: actions/cache@v2
              id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install dependencies
              run: |
                  yarn install --frozen-lockfile

            - name: Check pristine lock file
              run: |
                  sh ./scripts/check-git-pristine-yarn-lock.sh

            - name: Build
              run: |
                  yarn build
              env:
                  STATIC_COMPRESS: true

            - name: Deploy with Rsync
              uses: burnett01/rsync-deployments@4.1
              with:
                 switches: -avzrP --delete --exclude=/assets
                 # End with slash to allow sending .htaccess
                 path: dist/public/
                 remote_path: /tmp/public_html/
                 remote_host: ${{ secrets.DEPLOY_HOST }}
                 remote_port: ${{ secrets.DEPLOY_PORT }}
                 remote_user: ${{ secrets.DEPLOY_USER }}
                 remote_key: ${{ secrets.DEPLOY_KEY }}
